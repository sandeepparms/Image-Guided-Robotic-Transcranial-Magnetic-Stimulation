#!/usr/bin/env python

import rospy
import numpy as np
from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError
from forward_kinematics.msg import float_array
from solve_handEyeCalibration import solve
from poseEstimation import transform_from_image
from sensor_msgs.msg import JointState
import time

from handEye_PlanB import handEye as backupHandEye

class HandEye(object):
    def __init__(self):
        self.posRobot = []
        self.posImage = []
        self.img = Image()
        self.bridge = CvBridge()
        self.robotSpeed = 0

        rospy.init_node('hand_eye_calibration_auto', anonymous=False)
        rospy.Subscriber('/kinect2/hd/image_mono', Image, self.update_img)
        rospy.Subscriber('joint_states', JointState, self.update_speed)
        self.pub = rospy.Publisher('target_position', float_array, queue_size=3)
    
    def update_img(self, msg):
        self.img = msg
    
    def update_speed(self, msg):
        speed = msg.velocity
        self.robotSpeed = np.amax(speed)

    def get_posImage(self):
        try:
            cv_image = self.bridge.imgmsg_to_cv2(self.img)
        except CvBridgeError as e:
            print(e)
            return

        try:
            tmp_pos = transform_from_image(cv_image)
        except ValueError as e:
            print(e)
            return

        #rospy.loginfo(str(tmp_pos[0,3]), str(tmp_pos[1,3]), str(tmp_pos[2,3]))
        self.posImage.append(tmp_pos)

    def moveRobot(self, i):
        # TODO good positions
        try:
            if i == 0:
                target = np.array([[-0.625716623914825, -0.573679283523102,  0.528555376675948, 0.279735694609437 ], [-0.348595347945839 , -0.40051892296889  , -0.8473876773557421, -0.243914478301294 ], 
    [ 0.697825185807414 , -0.714476502063057 ,  0.05062941884504, 0.544315266062153 ],  [ 0. , 0. ,  0., 1.]])
            elif i == 1:
                target = np.array([[-0.38051276512455  , -0.318539812893717 , 0.868183404113961 , 0.253172229074841 ],  [-0.528385773065098 , -0.695584254283157 , -0.48679669269187 , -0.26332031145671  ],
        [ 0.7589588331389709, -0.643968114734713 ,  0.096366782686524 , 0.554218185267358 ], [ 0. ,  0.,  0.,  1.]])
            elif i == 2:
                target = np.array([[-0.26452904376597 , -0.24530588455656 ,  0.932657176033179,  0.228277048857611],  [-0.577710420466987, -0.734065908412016, -0.356928441275136,  -0.372882437340424],
        [ 0.772188484172173, -0.633223708581071,  0.052465987103233,  0.435808522924975],  [ 0. ,  0.  ,  0.  ,  1.]])
            elif i == 3:
                target = np.array([[-0.070714951011362,  0.136293085547801,  0.9881414830556  ,  0.054718390072651], [-0.939519976757882, -0.341905150636845, -0.02007688324581 , -0.405487362317824],
        [ 0.335114322248886, -0.929798399009084,  0.152227882543947,  0.512608657041798],  [ 0.,  0.,  0. ,  1.]])
        #     elif i == 4:
        #         target = np.array([[-0.063217967963623 , -0.42051101820788  ,  0.905082301281117 , 0.158023460988817 ], [ 0.096754448421167 , -0.9052067379765379, -0.413810751712171 ,  -0.132587391477001 ],
        #    [ 0.993298578090831 ,  0.061410463991473 ,  0.097911642183583 ,  0.652324488737128 ],  [ 0. ,  0. ,  0. ,  1. ]])
            elif i == 5:
                target = np.array([[-0.242217237934647 , -0.23098911976368  ,  0.942324167257803 ,  0.33266630989244  ],  [-0.689870697368466 , -0.641925394863642 , -0.334679261893389 ,        -0.284405482541351 ],
        [ 0.68220908126443  , -0.7311469168231221, -0.003867229031919 ,  0.53633215259519  ],   [ 0. ,  0.  ,  0. ,  1. ]])
        #     elif i == 6:
        #         target = np.array([[-0.096880605011214, -0.398616634210547,  0.911986253900417,  0.362726911926352], [ 0.285917924892334, -0.888820750940602, -0.358118154974928,  -0.241714402407867],
        #    [ 0.953344160625072,  0.22605851372607 ,  0.200081132978693,   0.527213600003166],  [ 0.,  0.,  0.  ,  1. ]])
            elif i == 7:
                target = np.array([[-0.246183371690008,  0.099143742520596,  0.964139131983735,  0.262419233197497], [-0.859848393391818, -0.481397331442418, -0.170051020760323,  -0.282637675102466],
        [ 0.447274510658553, -0.8708772172925  ,  0.203760605898253,  0.534966846220112],  [ 0. ,  0. ,  0. ,  1. ]])
            elif i == 8:
                target = np.array([[-0.467593279150832 , -0.153102611689966 ,  0.87058377861449  , 0.199598862593137 ], [-0.562574712379441 , -0.708126163671512 , -0.426693132491088 , -0.169170229956585 ],
        [ 0.6818109842794861, -0.689287259868902 ,  0.244983377187637 , 0.660053314088634 ],  [ 0. ,  0. ,  0. ,  1. ]])
            elif i == 9:
                target = np.array([[-0.162849590868555 , -0.138862054649945 ,  0.976830251646794 ,  0.217371230532456 ], [-0.730784584404372 , -0.6482035867548011, -0.213976637311507 , -0.297034154733761 ],
        [ 0.662898108272209 , -0.74869849732493  ,  0.004081440005652 ,  0.582986424494178 ],  [ 0.  ,  0. ,  0.  ,  1. ]])
            elif i == 10:
                target = np.array([[-0.513276299490117, -0.25870004436332 ,  0.818304177814184, 0.362189161136757], [-0.573272204002317, -0.606219098854435, -0.551232604535002, -0.101324412968392],
        [ 0.638675520511048, -0.752045670973866,  0.16285235113258 , 0.59328195406262 ], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 11:
                target = np.array([[-0.485897011403372 , -0.176315925790986 ,  0.8560471883148369, -0.083227585744238 ], [-0.5923833373474719, -0.653720548963456 , -0.470883664503228 , 0.189922750495455 ],
        [ 0.642639927130538 , -0.73590905564165  ,  0.213194244486742 , 0.59295735034881  ], [ 0.                ,  0.                ,  0.                ,  1.                ]])
            elif i == 12:
                target = np.array([[-0.62861445623408 , -0.112869943084072,  0.76948310011444 , 0.43436124067688 ],[-0.50808855720829 , -0.689475153882134, -0.516207351955788, -0.135676586695512], 
        [ 0.588803773295934, -0.71546096198703 ,  0.376066122410758, 0.479435142451298],[ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 13:
                target = np.array([[-0.453915495672294, -0.01811868399321 ,  0.890860503153513, 0.1815848089913  ], [-0.649197466627647, -0.678094181930624, -0.344573547673182, -0.202456186780985],
        [ 0.610330543322895, -0.734751654453525,  0.296034852956519, 0.525364113335455], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 14:
                target = np.array([[-0.445528268474981, -0.096730436963091,  0.890026844850544, 0.183704742585164], [-0.629144666611425, -0.673448811532674, -0.388128441008423, -0.106481886830283],
        [ 0.636931354593322, -0.73287783484709 ,  0.239183044394364, 0.67630059582743 ], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 15:
                target = np.array([[-0.396761816247608, -0.23212724232733 ,  0.88808614702483 , 0.185566184014706], [-0.603731031483621, -0.662791480869846, -0.44296308481642 , -0.015488770771763],
        [ 0.691439731857826, -0.711916003652021,  0.122827932297634, 0.55287756542345 ], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 16:
                target = np.array([[-0.490791300902418, -0.235785449649619,  0.838766427971482, 0.205752626309959], [-0.599722248097061, -0.606912305735676, -0.521527255552395, 0.145356018308065],
        [ 0.632026205228802, -0.758987928020026,  0.156461500133253, 0.605874283303823], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 17:
                target = np.array([[-0.422401840195858, -0.12309600560466 ,  0.898011168529284, 0.396277967459905],[-0.664304338579754, -0.631993857683205, -0.399103382088922, -0.129208873879494],
        [ 0.616665574799882, -0.765134718369829,  0.185182157892851, 0.55581144099098 ], [ 0.               ,  0.               ,  0.               ,  1.               ]])
        #     elif i == 18:
        #         target = np.array([[-0.470851100785817 , -0.069776370903965 ,  0.879448974615501 , 0.301124630610789 ],[-0.62911359062776  , -0.672300511284161 , -0.390164212370257 , -0.060857484787314 ],
        #[ 0.618478238078133 , -0.7369825510760259,  0.272656172556647 , 0.504561074095829 ], [ 0.                ,  0.                ,  0.                ,  1.                ]])
            elif i == 19:
               target = np.array([[-0.449770754055226 , -0.264525196179887 ,  0.853072499487931 , -0.017585478540061 ], [-0.6633496347778191, -0.54063065364247  , -0.517383569880461 , 0.155522848495582 ],
           [ 0.598058133325455 , -0.798589329335239 ,  0.067687164478684 , 0.637232744748674 ], [ 0.                ,  0.                ,  0.                ,  1.                ]])
        #     elif i == 20:
        #         target = np.array([[-0.408158356650451, -0.325716145790851,  0.852828088343458, -0.097074891806951], [-0.692585572513129, -0.498133396928852, -0.521716727363408, 0.210242448428027],
        # [ 0.594753714274291, -0.803599471898331, -0.022268994626139,0.56340494150815 ], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 21:
                target = np.array([[-0.290629390191017, -0.050281007845225,  0.955513672224143, 0.237829833345179], [-0.724208746405979, -0.641092832744694, -0.25401116399179 , -0.071894321751767],
        [ 0.625344904181907, -0.765814468427864,  0.149906473376802, 0.659399464260398], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 22:
                target = np.array([[-0.316240086291798 , -0.035529415051211 ,  0.948013643619265 , 0.275460646359313 ],[-0.6839445468341649, -0.683968571997169 , -0.253785045611366 , -0.138466964028986 ],
        [ 0.657428372279418 , -0.7286457666014901,  0.191998130552779 ,0.5322640390426761],[ 0.                ,  0.                ,  0.                ,  1.                ]])
            elif i == 23:
                target = np.array([[-0.414448238073803, -0.134332409655595,  0.900104139349243, 0.283657019569578], [-0.61898485158255 , -0.683436088814158, -0.387004994822722, -0.170356750565865],
        [ 0.667150966025568, -0.717544365333969,  0.200099156191684, 0.437605851170627], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 24:
                target = np.array([[-0.146513810161171, -0.086901306991451,  0.985384121180788, 0.18234300691231 ], [-0.725181166680703, -0.668063963526622, -0.166741764800289, -0.179665544787602],
        [ 0.67278969888344 , -0.739011977900411,  0.03486140553752 , 0.521425719374818], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 25:
                target = np.array([[-0.13491245276513 , -0.076133407837423,  0.987928304230604, 0.175850052846835], [-0.727880740697011, -0.668883185969769, -0.150946715265034,-0.364986527194156],
        [ 0.67230071947847 , -0.739458577432159,  0.034824629944045, 0.469780943196692], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 26:
                target = np.array([[-0.357847099400939, -0.313926357184358,  0.87942918743654 , 0.19550853660114 ],[-0.60239841072254 , -0.641998863811425, -0.474292750971166, -0.034605488218554],
        [ 0.71348553468819 , -0.699491030056711,  0.040628692581843,0.550614170042976], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 27:
                target = np.array([[-0.364048261192563, -0.308086329145604,  0.878949189268787, 0.198519993624236], [-0.616739182511887, -0.627422717799541, -0.475366715224789, -0.027425065272578],
        [ 0.697926675430335, -0.715138830565523,  0.038403238667287, 0.469154607413724], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 28:
                target = np.array([[-0.416862273956858, -0.344388550063588,  0.841202931008099, 0.194028435062678], [-0.605140365204403, -0.585403231076088, -0.539544433245269, -0.045769437537398],
        [ 0.678255838863035, -0.733961568224642,  0.035629109130376, 0.415756897093669],[ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 29:
                target = np.array([[-0.469616040455795, -0.275510572582967,  0.838781675373054, 0.219411068995304], [-0.598636169151776, -0.598935954344016, -0.531893278371996, 0.002176319378215],
        [ 0.648918724903133, -0.751910664234142,  0.11633933763377,  0.50848894363049 ], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 30:
                target = np.array([[-0.426442337547455, -0.189708010815245,  0.884396858531047, 0.182185938367003], [-0.599108201137394, -0.673287839570761, -0.433304567730428, -0.06175137878996 ],
        [ 0.677654997824836, -0.714628823739051,  0.173462815047957, 0.597744222545609], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 31:
                target = np.array([[-0.365092465381812 ,  0.036281560428688 ,  0.930264016338528 , 0.183580137902606 ], [-0.692084695184216 , -0.6789155149334209, -0.24513771287678  , -0.081763478519174 ],
        [ 0.622676694933415 , -0.733319420140738 ,  0.272976851823101 , 0.607137616571168 ], [ 0.                ,  0.                ,  0.                ,  1.                ]])
            elif i == 32:
                target = np.array([[-0.187990398015198 , -0.157779794661722 ,  0.969414847550104 , 0.140084371849806 ], [-0.715530921174706 , -0.654126989420005 , -0.245221089132232 , -0.333210704870004 ],
        [ 0.67281134881701  , -0.7397455090156519,  0.010073271276492 , 0.572273348371787 ], [ 0.                ,  0.                ,  0.                ,  1.                ]])
            elif i == 33:
                target = np.array([[-0.188639365962325, -0.158299539742524,  0.969204026676859, 0.140180142543268], [-0.712765240660071, -0.656844610521044, -0.246009896825815, -0.340935674098507],
        [ 0.675559694857622, -0.73722209228072 ,  0.011076341323501, 0.457268690354342], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 34:
                target = np.array([[-0.194617037011496, -0.15716313215056 ,  0.968206568247444, 0.162655373312044], [-0.729633745096615, -0.636508655605314, -0.249982658110124, -0.204864377600103],
        [ 0.655559918635325, -0.755087068643174,  0.00920390388395 , 0.459942473750782], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 35:
                target = np.array([[-0.250606426201762, -0.21899036212583 ,  0.94299503733709 , 0.168359431535637], [-0.683558068387511, -0.649738843477623, -0.332547443861317, -0.124921693760084],
        [ 0.685525190119747, -0.727930392669766,  0.013136100598179, 0.627542171942162], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 36:
                target = np.array([[-0.248547640266042 , -0.212380934413582 ,  0.945049421573177 , 0.156041397884647 ], [-0.69429471895321  , -0.641260907651928 , -0.32670979714589  , -0.177104258891514 ],
        [ 0.675410181853861 , -0.73734577168045  ,  0.011928924222049 , 0.5276810321662641], [ 0.                ,  0.                ,  0.                ,  1.                ]])
            elif i == 37:
                target = np.array([[-0.336664065009693 , -0.251505159371187 ,  0.9074152644411621, 0.233614138976132 ], [-0.616824538487295 , -0.669218496467869 , -0.414335724630668 , -0.122259657975345 ],
        [ 0.71146665139772  , -0.699207951038144 ,  0.070167265544241 , 0.527951189744191 ], [ 0.                ,  0.                ,  0.                ,  1.                ]])
            elif i == 38:
                target = np.array([[-0.416208118098647, -0.229668896202785,  0.879785769688154, 0.293623265000076], [-0.617322637338596, -0.639029569215752, -0.458861603424442, -0.045943663869183],
        [ 0.667595359374302, -0.734093596065873,  0.12418948569413 , 0.517377277342262], [ 0.               ,  0.               ,  0.               ,  1.               ]])
            elif i == 39:
                target = np.array([[-0.323984963077615 , -0.338872879278695 ,  0.883288693117354 , 0.027406046673935 ], [-0.67659393714097  , -0.5695801771918531, -0.46668947489115  , 0.123758428855062 ],
        [ 0.66125213642277  , -0.748828146799694 , -0.044743922904225 , 0.62526897141204  ], [ 0.                ,  0.                ,  0.                ,  1.                ]])

            else:
                return
            
            self.pub.publish(float_array(np.reshape(target, (16))))
            rospy.loginfo("driving to new position")
            time.sleep(0.5)
            while not self.robotSpeed == 0:     # wait for movement to finish
                time.sleep(0.2)

            time.sleep(0.25)     # we aren't in a hurry, let everyone catch up
            self.get_posImage()
            self.posRobot.append(target)
            rospy.loginfo("pose was saved")
        except KeyboardInterrupt:
            rospy.signal_shutdown("quit")
            exit()

    def hand_eye(self):
        (X,Y) = solve(self.posRobot, self.posImage, 36)
        rospy.loginfo(X)
        rospy.loginfo(Y)
        # np.savetxt("hand_X.txt", X)
        # np.savetxt("hand_Y.txt", Y)
        np.save("../data/matx", X)
        np.save("../data/maty", Y)

    def hand_eye_backup(self):
        backupHandEye(self.posRobot, self.posImage, 37)

    def run(self):
        for i in range(40):
            self.moveRobot(i)
            rospy.loginfo(i)
        self.hand_eye()
        #self.hand_eye_backup()
        np.save("../data/cam", self.posImage)
        np.save("../data/rob", self.posRobot)


if __name__ == "__main__":
    calib = HandEye()
    rospy.logwarn("the robot will move in 3 seconds, stay away and near a stop button")
    time.sleep(3)
    calib.run()